{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\Shipping\\\\shipping.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProgressBar.css';\nimport Navbar from '../Nav';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  trackingNumber,\n  data\n}) => {\n  _s();\n  const [apiData, setApiData] = useState({\n    status: ''\n  });\n  useEffect(() => {\n    if (trackingNumber) {\n      fetch(`http://172.22.81.182:8080/rfid/getstat/${trackingNumber}`).then(response => response.text()).then(data => {\n        setApiData({\n          status: data.trim()\n        });\n      }).catch(error => {\n        console.error('Error fetching data from API:', error);\n      });\n    }\n  }, [trackingNumber]);\n  const labels = ['DISPATCHED', 'REACHED', 'REACHED HUB 1', 'REACHED HUB 2', 'OUTFORDEL'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-labels\",\n        children: labels.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-label ${apiData.status === label ? 'active' : ''}`,\n          children: label\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-bar ${apiData.status}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), apiData.status === 'OUTFORDEL' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-amber-400 hover:bg-amber-300 rounded-full h-11 w-24  text-black font-semibold   mt-5\",\n        children: \"Track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.awb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"u+MxgMilk2LTWialYE9UfahJ+j4=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","jsxDEV","_jsxDEV","ProgressBar","trackingNumber","data","_s","apiData","setApiData","status","fetch","then","response","text","trim","catch","error","console","labels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","label","item","index","awb","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/Shipping/shipping.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ProgressBar.css';\r\nimport Navbar from '../Nav'\r\nimport Footer from '../Footer';\r\n\r\nconst ProgressBar = ({ trackingNumber, data }) => {\r\n  const [apiData, setApiData] = useState({ status: '' });\r\n\r\n  useEffect(() => {\r\n    if (trackingNumber) {\r\n      fetch(`http://172.22.81.182:8080/rfid/getstat/${trackingNumber}`)\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          setApiData({ status: data.trim() });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching data from API:', error);\r\n        });\r\n    }\r\n  }, [trackingNumber]);\r\n\r\n  const labels = ['DISPATCHED', 'REACHED', 'REACHED HUB 1', 'REACHED HUB 2', 'OUTFORDEL'];\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"progress-bar\">\r\n        <div className=\"progress-labels\">\r\n          {labels.map((label) => (\r\n            <div\r\n              key={label}\r\n              className={`progress-label ${apiData.status === label ? 'active' : ''}`}\r\n            >\r\n              {label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={`progress-bar ${apiData.status}`} />\r\n        {apiData.status === 'OUTFORDEL' && (\r\n          <button className=\"bg-amber-400 hover:bg-amber-300 rounded-full h-11 w-24  text-black font-semibold   mt-5\">\r\n            Track\r\n          </button>\r\n        )}\r\n\r\n        {/* You can use the data prop here to access and render the fetched data */}\r\n        <div>\r\n          {data.map((item, index) => (\r\n            <div key={index}>\r\n              <p>{item.awb}</p>\r\n              {/* Render other data fields as needed */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}