{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\lea\\\\leaf.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\nimport L from \"leaflet\";\nimport Navbar from \"../Navi\";\nimport Footer from '../Footer';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: './icons/ups.png',\n  iconSize: [38, 38]\n});\nfunction Leaf() {\n  _s();\n  const position = [13.0418, 80.2049];\n  const [markerPosition, setMarkerPosition] = useState(position);\n  useEffect(() => {\n    // Fetch data from the API containing latitude and longitude\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://your-api-url-here'); // Replace with your API URL\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Update the marker position based on the API data\n        setMarkerPosition([data.lat, data.lon]);\n      } catch (error) {\n        console.error('Error fetching data from the API:', error);\n      }\n    };\n\n    // Call the fetchData function periodically to update the marker position\n    const fetchDataInterval = setInterval(() => {\n      fetchData();\n    }, 5000); // Adjust the interval as needed (e.g., every 5 seconds)\n\n    // Cleanup the interval when the component unmounts\n    return () => {\n      clearInterval(fetchDataInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: position,\n        zoom: 10,\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: markerPosition,\n          icon: customIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-24\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaf, \"/bjOjwRJrxan6oBOYZj0uMPGWcE=\");\n_c = Leaf;\nexport default Leaf;\nvar _c;\n$RefreshReg$(_c, \"Leaf\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","L","Navbar","Footer","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","iconSize","Leaf","_s","position","markerPosition","setMarkerPosition","fetchData","response","fetch","ok","Error","data","json","lat","lon","error","console","fetchDataInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","center","zoom","scrollWheelZoom","attribution","url","icon","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/lea/leaf.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\nimport L from \"leaflet\";\r\nimport Navbar from \"../Navi\";\r\nimport Footer from '../Footer';\r\nimport './styles.css';\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: './icons/ups.png',\r\n  iconSize: [38, 38],\r\n});\r\n\r\nfunction Leaf() {\r\n  const position = [13.0418, 80.2049];\r\n  const [markerPosition, setMarkerPosition] = useState(position);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API containing latitude and longitude\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://your-api-url-here'); // Replace with your API URL\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n\r\n        // Update the marker position based on the API data\r\n        setMarkerPosition([data.lat, data.lon]);\r\n      } catch (error) {\r\n        console.error('Error fetching data from the API:', error);\r\n      }\r\n    };\r\n\r\n    // Call the fetchData function periodically to update the marker position\r\n    const fetchDataInterval = setInterval(() => {\r\n      fetchData();\r\n    }, 5000); // Adjust the interval as needed (e.g., every 5 seconds)\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => {\r\n      clearInterval(fetchDataInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"App\">\r\n        <MapContainer center={position} zoom={10} scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={markerPosition} icon={customIcon} />\r\n        </MapContainer>\r\n      </div>\r\n      <div className=\"mt-24\">\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaf;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}