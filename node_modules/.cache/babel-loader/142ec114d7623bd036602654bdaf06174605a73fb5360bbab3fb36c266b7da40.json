{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\leaf\\\\leaf.js\";\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\nimport L from \"leaflet\";\nimport \"./styles.css\";\nimport LeafletGeocoder from \"./leafgeo\";\nimport LeafletRoutingMachine from \"./leafroute\";\nimport imag from './icons/ups.png';\nimport u from './icons/ups.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new Icon({\n  // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n  iconUrl: u,\n  iconSize: [38, 38] // size of the icon\n});\n\nconst markers = [{\n  geocode: [12.971581, 80.043],\n  popUp: \"Load : 450 Kg\"\n}];\nfunction Leaf() {\n  const position = [13.0418, 80.2049];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: position,\n      zoom: 50,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeafletRoutingMachine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        chunkedLoading: true,\n        iconCreateFunction: createClusterCustomIcon,\n        children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.geocode,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [marker.popUp, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"PRE-ORDER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = Leaf;\nlet DefaultIcon = L.icon({\n  iconUrl: imag,\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nexport default Leaf;\nvar _c;\n$RefreshReg$(_c, \"Leaf\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","L","LeafletGeocoder","LeafletRoutingMachine","imag","u","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","iconSize","markers","geocode","popUp","Leaf","position","className","children","center","zoom","scrollWheelZoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","MarkerClusterGroup","chunkedLoading","iconCreateFunction","createClusterCustomIcon","map","marker","icon","Popup","_c","DefaultIcon","iconAnchor","popupAnchor","prototype","options","$RefreshReg$"],"sources":["D:/ups/src/pages/leaf/leaf.js"],"sourcesContent":["import { MapContainer, TileLayer,Marker } from \"react-leaflet\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\nimport L from \"leaflet\";\r\nimport \"./styles.css\";\r\nimport LeafletGeocoder from \"./leafgeo\";\r\nimport LeafletRoutingMachine from \"./leafroute\";\r\nimport imag from './icons/ups.png'\r\nimport u from './icons/ups.png'\r\n\r\nconst customIcon = new Icon({\r\n  // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\r\n  iconUrl: u,\r\n  iconSize: [38, 38] // size of the icon\r\n});\r\n\r\nconst markers = [\r\n  {\r\n    geocode: [12.971581, 80.043],\r\n    popUp: \"Load : 450 Kg\"\r\n  },\r\n]  \r\n\r\nfunction Leaf() {\r\n  const position = [13.0418, 80.2049];\r\n  return (\r\n    <div className=\"App\">\r\n      <MapContainer center={position} zoom={50} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {/*  <LeafletGeocoder /> */}\r\n        <LeafletRoutingMachine />\r\n        <MarkerClusterGroup\r\n        chunkedLoading\r\n        iconCreateFunction={createClusterCustomIcon}\r\n      >\r\n        {/* Mapping through the markers */}\r\n        {markers.map((marker) => (\r\n          <Marker position={marker.geocode} icon={customIcon}>\r\n            <Popup>{marker.popUp}\r\n            <button className=\"button\">\r\n              PRE-ORDER\r\n            </button></Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* Hard coded markers */}\r\n        {/* <Marker position={[51.505, -0.09]} icon={customIcon}>\r\n          <Popup>This is popup 1</Popup>\r\n        </Marker>\r\n        <Marker position={[51.504, -0.1]} icon={customIcon}>\r\n          <Popup>This is popup 2</Popup>\r\n        </Marker>\r\n        <Marker position={[51.5, -0.09]} icon={customIcon}>\r\n          <Popup>This is popup 3</Popup>\r\n        </Marker>\r\n       */}\r\n       </MarkerClusterGroup>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: imag,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n});\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\nexport default Leaf;"],"mappings":";AAAA,SAASA,YAAY,EAAEC,SAAS,EAACC,MAAM,QAAQ,eAAe;AAC9D,OAAO,oDAAoD;AAC3D,OAAO,mDAAmD;AAC1D,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,cAAc;AACrB,OAAOC,eAAe,MAAM,WAAW;AACvC,OAAOC,qBAAqB,MAAM,aAAa;AAC/C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,CAAC,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC;EAC1B;EACAC,OAAO,EAAEL,CAAC;EACVM,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACrB,CAAC,CAAC;;AAEF,MAAMC,OAAO,GAAG,CACd;EACEC,OAAO,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAC5BC,KAAK,EAAE;AACT,CAAC,CACF;AAED,SAASC,IAAIA,CAAA,EAAG;EACd,MAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;EACnC,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA,CAACT,YAAY;MAACqB,MAAM,EAAEH,QAAS;MAACI,IAAI,EAAE,EAAG;MAACC,eAAe,EAAE,KAAM;MAAAH,QAAA,gBAC/DX,OAAA,CAACR,SAAS;QACRuB,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAEFpB,OAAA,CAACJ,qBAAqB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBpB,OAAA,CAACqB,kBAAkB;QACnBC,cAAc;QACdC,kBAAkB,EAAEC,uBAAwB;QAAAb,QAAA,EAG3CN,OAAO,CAACoB,GAAG,CAAEC,MAAM,iBAClB1B,OAAA,CAACP,MAAM;UAACgB,QAAQ,EAAEiB,MAAM,CAACpB,OAAQ;UAACqB,IAAI,EAAE1B,UAAW;UAAAU,QAAA,eACjDX,OAAA,CAAC4B,KAAK;YAAAjB,QAAA,GAAEe,MAAM,CAACnB,KAAK,eACpBP,OAAA;cAAQU,SAAS,EAAC,QAAQ;cAAAC,QAAA,EAAC;YAE3B;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaiB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACS,EAAA,GAxCQrB,IAAI;AA0Cb,IAAIsB,WAAW,GAAGpC,CAAC,CAACiC,IAAI,CAAC;EACvBxB,OAAO,EAAEN,IAAI;EACbO,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClB2B,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AACFtC,CAAC,CAACD,MAAM,CAACwC,SAAS,CAACC,OAAO,CAACP,IAAI,GAAGG,WAAW;AAC7C,eAAetB,IAAI;AAAC,IAAAqB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}