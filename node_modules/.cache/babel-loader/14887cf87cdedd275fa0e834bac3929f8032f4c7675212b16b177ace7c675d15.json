{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\leaf\\\\leaf.js\";\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport imag from \"./icons/placeholder.png\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport { Icon, divIcon, point } from \"leaflet\";\n\n// create custom icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new Icon({\n  // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n  iconUrl: imag,\n  iconSize: [38, 38] // size of the icon\n});\n\n// custom cluster icon\nconst createClusterCustomIcon = function (cluster) {\n  return new divIcon({\n    html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n    className: \"custom-marker-cluster\",\n    iconSize: point(33, 33, true)\n  });\n};\n\n// markers\nconst markers = [{\n  geocode: [12.971581, 80.043],\n  popUp: \"Load : 450 Kg\"\n}, {\n  geocode: [12.9934, 80.085],\n  popUp: \"Load : 100 kg\"\n}, {\n  geocode: [12.9603, 80.05827],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.116670, 80.103081],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.0499, 80.2095],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [9.939093, 78.121719],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [9.4533, 77.8024],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [9.9151, 78.1237],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [11.6643, 78.1460],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [9.9195, 78.1193],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.067439, 80.237617],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.1009, 80.1902],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.0355, 80.2305],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [12.9763, 80.1593],\n  popUp: \"Load : 200 kg\"\n}, {\n  geocode: [13.0689, 80.1968],\n  popUp: \"Load : 300 kg\"\n}];\nexport default function Leaf() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center content-center\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [12.971581, 80.043],\n      zoom: 13,\n      children: /*#__PURE__*/_jsxDEV(RoutingMachine, {\n        position: \"topleft\",\n        plan: L.Routing.plan([L.latLng(12.971581, 80.043),\n        // Starting point\n        L.latLng(12.9934, 80.085),\n        // Intermediate point(s)\n        L.latLng(13.0689, 80.1968) // Ending point\n        ], {\n          addWaypoints: false,\n          // If true, you can add intermediate waypoints by clicking on the map\n          draggableWaypoints: false,\n          // If true, you can drag waypoints on the map\n          routeWhileDragging: true,\n          // If true, the route updates as you drag waypoints\n          geocoder: L.Control.Geocoder.nominatim(),\n          // You can use other geocoders if needed\n          routeDragTimeout: 250,\n          // Delay in milliseconds before the route updates while dragging\n          autoRoute: true,\n          // If true, the route is calculated automatically when waypoints change\n          showAlternatives: true // If true, alternative routes are shown\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_c = Leaf;\nvar _c;\n$RefreshReg$(_c, \"Leaf\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","Popup","MarkerClusterGroup","imag","L","Icon","divIcon","point","jsxDEV","_jsxDEV","customIcon","iconUrl","iconSize","createClusterCustomIcon","cluster","html","getChildCount","className","markers","geocode","popUp","Leaf","children","center","zoom","RoutingMachine","position","plan","Routing","latLng","addWaypoints","draggableWaypoints","routeWhileDragging","geocoder","Control","Geocoder","nominatim","routeDragTimeout","autoRoute","showAlternatives","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/leaf/leaf.js"],"sourcesContent":["import \"./styles.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport imag from \"./icons/placeholder.png\"\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\n\r\n\r\nimport { Icon, divIcon, point } from \"leaflet\";\r\n\r\n// create custom icon\r\nconst customIcon = new Icon({\r\n  // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\r\n  iconUrl: imag,\r\n  iconSize: [38, 38] // size of the icon\r\n});\r\n\r\n// custom cluster icon\r\nconst createClusterCustomIcon = function (cluster) {\r\n  return new divIcon({\r\n    html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\r\n    className: \"custom-marker-cluster\",\r\n    iconSize: point(33, 33, true)\r\n  });\r\n};\r\n\r\n// markers\r\nconst markers = [\r\n  {\r\n    geocode: [12.971581, 80.043],\r\n    popUp: \"Load : 450 Kg\"\r\n  },\r\n  {\r\n    geocode: [12.9934, 80.085],\r\n    popUp: \"Load : 100 kg\"\r\n  },\r\n  {\r\n    geocode: [12.9603, 80.05827],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.116670, 80.103081],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.0499, 80.2095],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [9.939093, 78.121719],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [9.4533, 77.8024],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [9.9151, 78.1237],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [11.6643, 78.1460],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [9.9195, 78.1193],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.067439, 80.237617],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.1009, 80.1902],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.0355, 80.2305],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [12.9763, 80.1593],\r\n    popUp: \"Load : 200 kg\"\r\n  },\r\n  {\r\n    geocode: [13.0689, 80.1968],\r\n    popUp: \"Load : 300 kg\"\r\n  }\r\n];\r\n\r\nexport default function Leaf() {\r\n  return (\r\n    <div className=\"flex justify-center content-center\">\r\n      <MapContainer center={[12.971581, 80.043]} zoom={13}>\r\n  {/* ... */}\r\n  {/* Your existing TileLayer */}\r\n  {/* ... */}\r\n  <RoutingMachine\r\n    position=\"topleft\"\r\n    plan={L.Routing.plan(\r\n      [\r\n        L.latLng(12.971581, 80.043), // Starting point\r\n        L.latLng(12.9934, 80.085), // Intermediate point(s)\r\n        L.latLng(13.0689, 80.1968), // Ending point\r\n      ],\r\n      {\r\n        addWaypoints: false, // If true, you can add intermediate waypoints by clicking on the map\r\n        draggableWaypoints: false, // If true, you can drag waypoints on the map\r\n        routeWhileDragging: true, // If true, the route updates as you drag waypoints\r\n        geocoder: L.Control.Geocoder.nominatim(), // You can use other geocoders if needed\r\n        routeDragTimeout: 250, // Delay in milliseconds before the route updates while dragging\r\n        autoRoute: true, // If true, the route is calculated automatically when waypoints change\r\n        showAlternatives: true, // If true, alternative routes are shown\r\n      }\r\n    )}\r\n  />\r\n  {/* ... */}\r\n</MapContainer>\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}