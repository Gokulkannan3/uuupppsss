{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\leaf\\\\leaf.js\";\nimport { MapContainer } from 'react-leaflet';\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Leaf() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center content-center\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [12.971581, 80.043],\n      zoom: 13,\n      children: /*#__PURE__*/_jsxDEV(RoutingMachine, {\n        position: \"topleft\",\n        plan: L.Routing.plan([L.latLng(12.971581, 80.043),\n        // Starting point\n        L.latLng(12.9934, 80.085),\n        // Intermediate point(s)\n        L.latLng(13.0689, 80.1968) // Ending point\n        ], {\n          addWaypoints: false,\n          // If true, you can add intermediate waypoints by clicking on the map\n          draggableWaypoints: false,\n          // If true, you can drag waypoints on the map\n          routeWhileDragging: true,\n          // If true, the route updates as you drag waypoints\n          geocoder: L.Control.Geocoder.nominatim(),\n          // You can use other geocoders if needed\n          routeDragTimeout: 250,\n          // Delay in milliseconds before the route updates while dragging\n          autoRoute: true,\n          // If true, the route is calculated automatically when waypoints change\n          showAlternatives: true // If true, alternative routes are shown\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Leaf;\nvar _c;\n$RefreshReg$(_c, \"Leaf\");","map":{"version":3,"names":["MapContainer","L","jsxDEV","_jsxDEV","Leaf","className","children","center","zoom","RoutingMachine","position","plan","Routing","latLng","addWaypoints","draggableWaypoints","routeWhileDragging","geocoder","Control","Geocoder","nominatim","routeDragTimeout","autoRoute","showAlternatives","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/leaf/leaf.js"],"sourcesContent":["import { MapContainer} from 'react-leaflet'\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\n\r\nexport default function Leaf() {\r\n  return (\r\n    <div className=\"flex justify-center content-center\">\r\n      <MapContainer center={[12.971581, 80.043]} zoom={13}>\r\n      <RoutingMachine\r\n    position=\"topleft\"\r\n    plan={L.Routing.plan(\r\n      [\r\n        L.latLng(12.971581, 80.043), // Starting point\r\n        L.latLng(12.9934, 80.085), // Intermediate point(s)\r\n        L.latLng(13.0689, 80.1968), // Ending point\r\n      ],\r\n      {\r\n        addWaypoints: false, // If true, you can add intermediate waypoints by clicking on the map\r\n        draggableWaypoints: false, // If true, you can drag waypoints on the map\r\n        routeWhileDragging: true, // If true, the route updates as you drag waypoints\r\n        geocoder: L.Control.Geocoder.nominatim(), // You can use other geocoders if needed\r\n        routeDragTimeout: 250, // Delay in milliseconds before the route updates while dragging\r\n        autoRoute: true, // If true, the route is calculated automatically when waypoints change\r\n        showAlternatives: true, // If true, alternative routes are shown\r\n      }\r\n    )}\r\n  />\r\n      </MapContainer>\r\n    \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,YAAY,QAAO,eAAe;AAC3C,OAAO,0DAA0D;AACjE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAC7B,oBACED,OAAA;IAAKE,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eACjDH,OAAA,CAACH,YAAY;MAACO,MAAM,EAAE,CAAC,SAAS,EAAE,MAAM,CAAE;MAACC,IAAI,EAAE,EAAG;MAAAF,QAAA,eACpDH,OAAA,CAACM,cAAc;QACjBC,QAAQ,EAAC,SAAS;QAClBC,IAAI,EAAEV,CAAC,CAACW,OAAO,CAACD,IAAI,CAClB,CACEV,CAAC,CAACY,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;QAAE;QAC7BZ,CAAC,CAACY,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;QAAE;QAC3BZ,CAAC,CAACY,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAE;QAAA,CAC7B,EACD;UACEC,YAAY,EAAE,KAAK;UAAE;UACrBC,kBAAkB,EAAE,KAAK;UAAE;UAC3BC,kBAAkB,EAAE,IAAI;UAAE;UAC1BC,QAAQ,EAAEhB,CAAC,CAACiB,OAAO,CAACC,QAAQ,CAACC,SAAS,CAAC,CAAC;UAAE;UAC1CC,gBAAgB,EAAE,GAAG;UAAE;UACvBC,SAAS,EAAE,IAAI;UAAE;UACjBC,gBAAgB,EAAE,IAAI,CAAE;QAC1B,CACF;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEV;AAACC,EAAA,GA3BuBxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}