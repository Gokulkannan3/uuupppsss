{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\Shipping\\\\shipping.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from '../Nav';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  trackingNumber\n}) => {\n  _s();\n  const {\n    awb\n  } = useParams();\n  const [apiData, setApiData] = useState({\n    status: ''\n  });\n  useEffect(() => {\n    // Fetch the tracking status based on the tracking number (AWB)\n    if (trackingNumber) {\n      fetch(`http://172.22.81.182:8080/rfid/getstat/${trackingNumber}`).then(response => response.text()).then(data => {\n        // Assuming the API response contains only the plain text \"REACHED\"\n        setApiData({\n          status: data.trim()\n        });\n      }).catch(error => {\n        console.error('Error fetching data from API:', error);\n      });\n    }\n  }, [trackingNumber]);\n\n  // Labels for different stages of the shipping progress\n  const labels = ['DISPATCHED', 'REACHED', 'REACHED HUB 1', 'REACHED HUB 2', 'OUTFORDEL'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-labels\",\n        children: labels.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-label ${apiData.status === label ? 'active' : ''}`,\n          children: label\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-bar ${apiData.status}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressBar, \"sj/KGJ6boVibq8zZNN3Jf09ON8Y=\", false, function () {\n  return [useParams];\n});\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","Footer","jsxDEV","_jsxDEV","ProgressBar","trackingNumber","_s","awb","apiData","setApiData","status","fetch","then","response","text","data","trim","catch","error","console","labels","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","label","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/Shipping/shipping.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from '../Nav';\r\nimport Footer from '../Footer';\r\n\r\nconst ProgressBar = ({ trackingNumber }) => {\r\n  const { awb } = useParams();\r\n  const [apiData, setApiData] = useState({ status: '' });\r\n\r\n  useEffect(() => {\r\n    // Fetch the tracking status based on the tracking number (AWB)\r\n    if (trackingNumber) {\r\n      fetch(`http://172.22.81.182:8080/rfid/getstat/${trackingNumber}`)\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          // Assuming the API response contains only the plain text \"REACHED\"\r\n          setApiData({ status: data.trim() });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching data from API:', error);\r\n        });\r\n    }\r\n  }, [trackingNumber]);\r\n\r\n  // Labels for different stages of the shipping progress\r\n  const labels = ['DISPATCHED', 'REACHED', 'REACHED HUB 1', 'REACHED HUB 2', 'OUTFORDEL'];\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"progress-bar\">\r\n        {/* Render labels for each stage */}\r\n        <div className=\"progress-labels\">\r\n          {labels.map((label) => (\r\n            <div\r\n              key={label}\r\n              className={`progress-label ${apiData.status === label ? 'active' : ''}`}\r\n            >\r\n              {label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Render the progress bar with dynamic CSS classes */}\r\n        <div className={`progress-bar ${apiData.status}`} />\r\n\r\n        {/* Render additional data based on the fetched data */}\r\n        <div>\r\n          {/* Render other data fields as needed */}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAI,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,MAAM,EAAE;EAAG,CAAC,CAAC;EAEtDZ,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,cAAc,EAAE;MAClBM,KAAK,CAAE,0CAAyCN,cAAe,EAAC,CAAC,CAC9DO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd;QACAN,UAAU,CAAC;UAAEC,MAAM,EAAEK,IAAI,CAACC,IAAI,CAAC;QAAE,CAAC,CAAC;MACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACb,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMe,MAAM,GAAG,CAAC,YAAY,EAAE,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE,WAAW,CAAC;EAEvF,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAE3BlB,OAAA;QAAKuB,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAC7BD,MAAM,CAACO,GAAG,CAAEC,KAAK,iBAChBzB,OAAA;UAEEuB,SAAS,EAAG,kBAAiBlB,OAAO,CAACE,MAAM,KAAKkB,KAAK,GAAG,QAAQ,GAAG,EAAG,EAAE;UAAAP,QAAA,EAEvEO;QAAK,GAHDA,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNtB,OAAA;QAAKuB,SAAS,EAAG,gBAAelB,OAAO,CAACE,MAAO;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGpDtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtB,OAAA,CAACF,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjDIF,WAAW;EAAA,QACCL,SAAS;AAAA;AAAA8B,EAAA,GADrBzB,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}